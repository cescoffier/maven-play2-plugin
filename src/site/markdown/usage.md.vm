Usage
=====

Before starting, be sure to have the _play_ executable available from your _PATH_ or to have defined the _PLAY2\_HOME_
 system variable used by the plugin to find the Play 2 SDK. The packaging of your project must be _play2_.

    export PLAY2_HOME=...
    # or
    mvn clean install -DPLAY2_HOME=...
    # or if play is available in your path
    mvn clean install

It is also possible to defined this location form the pom file directly (see below).

Best practice is to define the version of the Play2 plugin that you want to use in either your _pom.xml_
or a parent _pom.xml_.

    <project>
        [...]
        <build>
            <pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>${project.artifactId}</artifactId>
                        <version>${project.version}</version>
                    </plugin>
                </plugins>
            </pluginManagement>
        </build>
        [...]
    </project>

To use the ${project.artifactId} Plugin, you need to add the following configuration to your _pom.xml_

    <project>
        [...]
        <packaging>play2</packaging>
        [...]
        <build>
            <plugins>
                <plugin>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>${project.artifactId}</artifactId>
                    <version>${project.version}</version>
                    <extensions>true</extensions>
                </plugin>
            </plugins>
        </build>
        [...]
    </project>


The ${project.artifactId} Plugin is invoked during the:

* _process-resources_ phase : copy (compile) dependencies to the _lib_ directory
* _compile_ phase: compile the Play 2 application
* _test_ phase: run tests
* _package_ phase: build the application package

A full run, executing all the above steps:

    mvn clean install

Setting Play 2 location from the pom file
-----------------------------------------

The _PLAY2_ location can also be defined in the _pom.xml_ file such as in:

      <plugin>
        <groupId>${project.groupId}</groupId>
        <artifactId>${project.artifactId}</artifactId>
        <version>${project.version}</version>
        <extensions>true</extensions>
          <configuration>
            <play2Home>some/path/to/play-2.0</play2Home>
          </configuration>
      </plugin>

The plugin is checking in this order:

* the PLAY2\_HOME system variable (set with -DPLAY2\_HOME=...)
* the _play2Home_ setting
* the PLAY2\_HOME environment variable

If _PLAY2\_HOME_ is not defined, the plugin is looking inside the system _PATH_ to find the _play_ executable.

Disable the distribution packaging
----------------------------------

By default the plugin generates two packages: a jar containing the application and a zip embedding all required files to
run the application. For Play 2 modules this second packages is useless, so you can disable it using:

    <project>
        [...]
        <packaging>play2</packaging>
        [...]
        <build>
            <plugins>
                <plugin>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>${project.artifactId}</artifactId>
                    <version>${project.version}</version>
                    <extensions>true</extensions>
                    <configuration>
                        <buildDist>false</buildDist>
                    </configuration>
                </plugin>
            </plugins>
        </build>
        [...]
    </project>

Using a classifier
------------------

You can set the packaging classifier, applied to both packages (jar and zip):

    <project>
        [...]
        <packaging>play2</packaging>
        [...]
        <build>
            <plugins>
                <plugin>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>${project.artifactId}</artifactId>
                    <version>${project.version}</version>
                    <extensions>true</extensions>
                    <configuration>
                        <classifier>my-classifier</classifier>
                    </configuration>
                </plugin>
            </plugins>
        </build>
        [...]
    </project>

Downloading and installing Play 2 distributions
-----------------------------------------------

You can use the _install-play_ goal to download and install Play 2 distributions.

On your prompt type;

    mvn play2:install-play -Dplay2version=2.0.2 -Dplay2basedir=${HOME}/opt

to install Play 2.0.2 in _${HOME}/opt/play-2.0.2_.

Or register the _install-play_ goal in your _pom.xml_ and use the installed distribution through the plugin by adding;

    <project>
        [...]
        <properties>
            [...]
            <play2.version>2.0.2</play2.version>
            [...]
        </properties>
        [...]
        <build>
            <plugins>
                [...]
                <plugin>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>${project.artifactId}</artifactId>
                    <version>${project.version}</version>
                    <extensions>true<extensions>
                    <configuration>
                        <play2Home>${user.home}/opt/play-${play2.version}</play2Home>
                    </configuration>
                    <executions>
                        <execution>
                            <id>play-installation</id>
                            <goals>
                                <goal>install-play</goal>
                            </goals>
                            <phase>pre-clean</phase>
                            <configuration>
                                <play2version>${play2.version}</play2version>
                                <play2basedir>${user.home}/opt</play2basedir>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                [...]
            </plugins>
        </build>
        [...]
    </project>

The Maven process must be able to write and execute into _play2basedir_.
If the requested version is already installed nothing gets downloaded.
